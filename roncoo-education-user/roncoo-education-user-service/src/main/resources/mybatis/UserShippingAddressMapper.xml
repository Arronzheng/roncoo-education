<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.user.service.dao.impl.mapper.UserShippingAddressMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddress">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
            <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
            <result column="status_id" property="statusId" jdbcType="TINYINT"/>
            <result column="user_no" property="userNo" jdbcType="BIGINT"/>
            <result column="receiver_name" property="receiverName" jdbcType="VARCHAR"/>
            <result column="receiver_phone" property="receiverPhone" jdbcType="VARCHAR"/>
            <result column="receiver_province" property="receiverProvince" jdbcType="VARCHAR"/>
            <result column="receiver_city" property="receiverCity" jdbcType="VARCHAR"/>
            <result column="receiver_district" property="receiverDistrict" jdbcType="VARCHAR"/>
            <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR"/>
            <result column="receiver_zip" property="receiverZip" jdbcType="VARCHAR"/>
            <result column="is_toleration" property="isToleration" jdbcType="TINYINT"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, gmt_create, gmt_modified, status_id, user_no, receiver_name, receiver_phone, receiver_province, receiver_city, receiver_district, receiver_address, receiver_zip, is_toleration
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddressExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from user_shipping_address
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from user_shipping_address
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from user_shipping_address
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddressExample" >
        delete from user_shipping_address
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddress" >
        insert into user_shipping_address
        (
         id, gmt_create, gmt_modified, status_id, user_no, receiver_name, receiver_phone, receiver_province, receiver_city, receiver_district, receiver_address, receiver_zip, is_toleration
        ) values (
            #{id,jdbcType=BIGINT},
            #{gmtCreate,jdbcType=TIMESTAMP},
            #{gmtModified,jdbcType=TIMESTAMP},
            #{statusId,jdbcType=TINYINT},
            #{userNo,jdbcType=BIGINT},
            #{receiverName,jdbcType=VARCHAR},
            #{receiverPhone,jdbcType=VARCHAR},
            #{receiverProvince,jdbcType=VARCHAR},
            #{receiverCity,jdbcType=VARCHAR},
            #{receiverDistrict,jdbcType=VARCHAR},
            #{receiverAddress,jdbcType=VARCHAR},
            #{receiverZip,jdbcType=VARCHAR},
            #{isToleration,jdbcType=TINYINT},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddress" >
        insert into user_shipping_address
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="gmtCreate != null" >
                gmt_create,
            </if>
            <if test="gmtModified != null" >
                gmt_modified,
            </if>
            <if test="statusId != null" >
                status_id,
            </if>
            <if test="userNo != null" >
                user_no,
            </if>
            <if test="receiverName != null" >
                receiver_name,
            </if>
            <if test="receiverPhone != null" >
                receiver_phone,
            </if>
            <if test="receiverProvince != null" >
                receiver_province,
            </if>
            <if test="receiverCity != null" >
                receiver_city,
            </if>
            <if test="receiverDistrict != null" >
                receiver_district,
            </if>
            <if test="receiverAddress != null" >
                receiver_address,
            </if>
            <if test="receiverZip != null" >
                receiver_zip,
            </if>
            <if test="isToleration != null" >
                is_toleration,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null" >
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null" >
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="statusId != null" >
                #{statusId,jdbcType=TINYINT},
            </if>
            <if test="userNo != null" >
                #{userNo,jdbcType=BIGINT},
            </if>
            <if test="receiverName != null" >
                #{receiverName,jdbcType=VARCHAR},
            </if>
            <if test="receiverPhone != null" >
                #{receiverPhone,jdbcType=VARCHAR},
            </if>
            <if test="receiverProvince != null" >
                #{receiverProvince,jdbcType=VARCHAR},
            </if>
            <if test="receiverCity != null" >
                #{receiverCity,jdbcType=VARCHAR},
            </if>
            <if test="receiverDistrict != null" >
                #{receiverDistrict,jdbcType=VARCHAR},
            </if>
            <if test="receiverAddress != null" >
                #{receiverAddress,jdbcType=VARCHAR},
            </if>
            <if test="receiverZip != null" >
                #{receiverZip,jdbcType=VARCHAR},
            </if>
            <if test="isToleration != null" >
                #{isToleration,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddressExample" resultType="java.lang.Integer" >
        select count(*) from user_shipping_address
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update user_shipping_address
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null" >
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null" >
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.statusId != null" >
                status_id = #{record.statusId,jdbcType=TINYINT},
            </if>
            <if test="record.userNo != null" >
                user_no = #{record.userNo,jdbcType=BIGINT},
            </if>
            <if test="record.receiverName != null" >
                receiver_name = #{record.receiverName,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverPhone != null" >
                receiver_phone = #{record.receiverPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverProvince != null" >
                receiver_province = #{record.receiverProvince,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverCity != null" >
                receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverDistrict != null" >
                receiver_district = #{record.receiverDistrict,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverAddress != null" >
                receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.receiverZip != null" >
                receiver_zip = #{record.receiverZip,jdbcType=VARCHAR},
            </if>
            <if test="record.isToleration != null" >
                is_toleration = #{record.isToleration,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update user_shipping_address
        set
            id = #{record.id,jdbcType=BIGINT},
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            status_id = #{record.statusId,jdbcType=TINYINT},
            user_no = #{record.userNo,jdbcType=BIGINT},
            receiver_name = #{record.receiverName,jdbcType=VARCHAR},
            receiver_phone = #{record.receiverPhone,jdbcType=VARCHAR},
            receiver_province = #{record.receiverProvince,jdbcType=VARCHAR},
            receiver_city = #{record.receiverCity,jdbcType=VARCHAR},
            receiver_district = #{record.receiverDistrict,jdbcType=VARCHAR},
            receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
            receiver_zip = #{record.receiverZip,jdbcType=VARCHAR},
            is_toleration = #{record.isToleration,jdbcType=TINYINT},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddress" >
        update user_shipping_address
        <set >
                <if test="gmtCreate != null" >
                    gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
                </if>
                <if test="gmtModified != null" >
                    gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
                </if>
                <if test="statusId != null" >
                    status_id = #{statusId,jdbcType=TINYINT},
                </if>
                <if test="userNo != null" >
                    user_no = #{userNo,jdbcType=BIGINT},
                </if>
                <if test="receiverName != null" >
                    receiver_name = #{receiverName,jdbcType=VARCHAR},
                </if>
                <if test="receiverPhone != null" >
                    receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
                </if>
                <if test="receiverProvince != null" >
                    receiver_province = #{receiverProvince,jdbcType=VARCHAR},
                </if>
                <if test="receiverCity != null" >
                    receiver_city = #{receiverCity,jdbcType=VARCHAR},
                </if>
                <if test="receiverDistrict != null" >
                    receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
                </if>
                <if test="receiverAddress != null" >
                    receiver_address = #{receiverAddress,jdbcType=VARCHAR},
                </if>
                <if test="receiverZip != null" >
                    receiver_zip = #{receiverZip,jdbcType=VARCHAR},
                </if>
                <if test="isToleration != null" >
                    is_toleration = #{isToleration,jdbcType=TINYINT},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.user.service.dao.impl.mapper.entity.UserShippingAddress" >
        update user_shipping_address
        set
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
                status_id = #{statusId,jdbcType=TINYINT},
                user_no = #{userNo,jdbcType=BIGINT},
                receiver_name = #{receiverName,jdbcType=VARCHAR},
                receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
                receiver_province = #{receiverProvince,jdbcType=VARCHAR},
                receiver_city = #{receiverCity,jdbcType=VARCHAR},
                receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
                receiver_address = #{receiverAddress,jdbcType=VARCHAR},
                receiver_zip = #{receiverZip,jdbcType=VARCHAR},
                is_toleration = #{isToleration,jdbcType=TINYINT},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>