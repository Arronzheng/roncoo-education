<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.service.dao.impl.mapper.CouponIssueMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssue">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="cid" property="cid" jdbcType="BIGINT"/>
            <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
            <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
            <result column="total_count" property="totalCount" jdbcType="INTEGER"/>
            <result column="remain_count" property="remainCount" jdbcType="INTEGER"/>
            <result column="is_permanent" property="isPermanent" jdbcType="TINYINT"/>
            <result column="status" property="status" jdbcType="TINYINT"/>
            <result column="is_del" property="isDel" jdbcType="TINYINT"/>
            <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, cid, start_time, end_time, total_count, remain_count, is_permanent, status, is_del, add_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssueExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from coupon_issue
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from coupon_issue
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from coupon_issue
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssueExample" >
        delete from coupon_issue
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssue" >
        insert into coupon_issue
        (
         id, cid, start_time, end_time, total_count, remain_count, is_permanent, status, is_del, add_time
        ) values (
            #{id,jdbcType=BIGINT},
            #{cid,jdbcType=BIGINT},
            #{startTime,jdbcType=TIMESTAMP},
            #{endTime,jdbcType=TIMESTAMP},
            #{totalCount,jdbcType=INTEGER},
            #{remainCount,jdbcType=INTEGER},
            #{isPermanent,jdbcType=TINYINT},
            #{status,jdbcType=TINYINT},
            #{isDel,jdbcType=TINYINT},
            #{addTime,jdbcType=TIMESTAMP},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssue" >
        insert into coupon_issue
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="cid != null" >
                cid,
            </if>
            <if test="startTime != null" >
                start_time,
            </if>
            <if test="endTime != null" >
                end_time,
            </if>
            <if test="totalCount != null" >
                total_count,
            </if>
            <if test="remainCount != null" >
                remain_count,
            </if>
            <if test="isPermanent != null" >
                is_permanent,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="isDel != null" >
                is_del,
            </if>
            <if test="addTime != null" >
                add_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="cid != null" >
                #{cid,jdbcType=BIGINT},
            </if>
            <if test="startTime != null" >
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="totalCount != null" >
                #{totalCount,jdbcType=INTEGER},
            </if>
            <if test="remainCount != null" >
                #{remainCount,jdbcType=INTEGER},
            </if>
            <if test="isPermanent != null" >
                #{isPermanent,jdbcType=TINYINT},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isDel != null" >
                #{isDel,jdbcType=TINYINT},
            </if>
            <if test="addTime != null" >
                #{addTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssueExample" resultType="java.lang.Integer" >
        select count(*) from coupon_issue
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update coupon_issue
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.cid != null" >
                cid = #{record.cid,jdbcType=BIGINT},
            </if>
            <if test="record.startTime != null" >
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null" >
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.totalCount != null" >
                total_count = #{record.totalCount,jdbcType=INTEGER},
            </if>
            <if test="record.remainCount != null" >
                remain_count = #{record.remainCount,jdbcType=INTEGER},
            </if>
            <if test="record.isPermanent != null" >
                is_permanent = #{record.isPermanent,jdbcType=TINYINT},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.isDel != null" >
                is_del = #{record.isDel,jdbcType=TINYINT},
            </if>
            <if test="record.addTime != null" >
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update coupon_issue
        set
            id = #{record.id,jdbcType=BIGINT},
            cid = #{record.cid,jdbcType=BIGINT},
            start_time = #{record.startTime,jdbcType=TIMESTAMP},
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
            total_count = #{record.totalCount,jdbcType=INTEGER},
            remain_count = #{record.remainCount,jdbcType=INTEGER},
            is_permanent = #{record.isPermanent,jdbcType=TINYINT},
            status = #{record.status,jdbcType=TINYINT},
            is_del = #{record.isDel,jdbcType=TINYINT},
            add_time = #{record.addTime,jdbcType=TIMESTAMP},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssue" >
        update coupon_issue
        <set >
                <if test="cid != null" >
                    cid = #{cid,jdbcType=BIGINT},
                </if>
                <if test="startTime != null" >
                    start_time = #{startTime,jdbcType=TIMESTAMP},
                </if>
                <if test="endTime != null" >
                    end_time = #{endTime,jdbcType=TIMESTAMP},
                </if>
                <if test="totalCount != null" >
                    total_count = #{totalCount,jdbcType=INTEGER},
                </if>
                <if test="remainCount != null" >
                    remain_count = #{remainCount,jdbcType=INTEGER},
                </if>
                <if test="isPermanent != null" >
                    is_permanent = #{isPermanent,jdbcType=TINYINT},
                </if>
                <if test="status != null" >
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="isDel != null" >
                    is_del = #{isDel,jdbcType=TINYINT},
                </if>
                <if test="addTime != null" >
                    add_time = #{addTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponIssue" >
        update coupon_issue
        set
                cid = #{cid,jdbcType=BIGINT},
                start_time = #{startTime,jdbcType=TIMESTAMP},
                end_time = #{endTime,jdbcType=TIMESTAMP},
                total_count = #{totalCount,jdbcType=INTEGER},
                remain_count = #{remainCount,jdbcType=INTEGER},
                is_permanent = #{isPermanent,jdbcType=TINYINT},
                status = #{status,jdbcType=TINYINT},
                is_del = #{isDel,jdbcType=TINYINT},
                add_time = #{addTime,jdbcType=TIMESTAMP},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>