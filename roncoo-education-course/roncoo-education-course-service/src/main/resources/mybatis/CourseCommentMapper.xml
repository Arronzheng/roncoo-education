<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.service.dao.impl.mapper.CourseCommentMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseComment">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
            <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
            <result column="star" property="star" jdbcType="INTEGER"/>
            <result column="topping" property="topping" jdbcType="INTEGER"/>
            <result column="user_id" property="userId" jdbcType="BIGINT"/>
            <result column="content" property="content" jdbcType="VARCHAR"/>
            <result column="like_number" property="likeNumber" jdbcType="INTEGER"/>
            <result column="pid" property="pid" jdbcType="BIGINT"/>
            <result column="parent_no" property="parentNo" jdbcType="BIGINT"/>
            <result column="course_id" property="courseId" jdbcType="BIGINT"/>
            <result column="chapter_id" property="chapterId" jdbcType="BIGINT"/>
            <result column="period_id" property="periodId" jdbcType="BIGINT"/>
            <result column="comment_type" property="commentType" jdbcType="INTEGER"/>
            <result column="status" property="status" jdbcType="INTEGER"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, created_at, updated_at, star, topping, user_id, content, like_number, pid, parent_no, course_id, chapter_id, period_id, comment_type, status
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseCommentExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from course_comment
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from course_comment
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from course_comment
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseCommentExample" >
        delete from course_comment
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseComment" >
        insert into course_comment
        (
         id, created_at, updated_at, star, topping, user_id, content, like_number, pid, parent_no, course_id, chapter_id, period_id, comment_type, status
        ) values (
            #{id,jdbcType=BIGINT},
            #{createdAt,jdbcType=TIMESTAMP},
            #{updatedAt,jdbcType=TIMESTAMP},
            #{star,jdbcType=INTEGER},
            #{topping,jdbcType=INTEGER},
            #{userId,jdbcType=BIGINT},
            #{content,jdbcType=VARCHAR},
            #{likeNumber,jdbcType=INTEGER},
            #{pid,jdbcType=BIGINT},
            #{parentNo,jdbcType=BIGINT},
            #{courseId,jdbcType=BIGINT},
            #{chapterId,jdbcType=BIGINT},
            #{periodId,jdbcType=BIGINT},
            #{commentType,jdbcType=INTEGER},
            #{status,jdbcType=INTEGER},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseComment" >
        insert into course_comment
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="createdAt != null" >
                created_at,
            </if>
            <if test="updatedAt != null" >
                updated_at,
            </if>
            <if test="star != null" >
                star,
            </if>
            <if test="topping != null" >
                topping,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="likeNumber != null" >
                like_number,
            </if>
            <if test="pid != null" >
                pid,
            </if>
            <if test="parentNo != null" >
                parent_no,
            </if>
            <if test="courseId != null" >
                course_id,
            </if>
            <if test="chapterId != null" >
                chapter_id,
            </if>
            <if test="periodId != null" >
                period_id,
            </if>
            <if test="commentType != null" >
                comment_type,
            </if>
            <if test="status != null" >
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createdAt != null" >
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null" >
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="star != null" >
                #{star,jdbcType=INTEGER},
            </if>
            <if test="topping != null" >
                #{topping,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="likeNumber != null" >
                #{likeNumber,jdbcType=INTEGER},
            </if>
            <if test="pid != null" >
                #{pid,jdbcType=BIGINT},
            </if>
            <if test="parentNo != null" >
                #{parentNo,jdbcType=BIGINT},
            </if>
            <if test="courseId != null" >
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="chapterId != null" >
                #{chapterId,jdbcType=BIGINT},
            </if>
            <if test="periodId != null" >
                #{periodId,jdbcType=BIGINT},
            </if>
            <if test="commentType != null" >
                #{commentType,jdbcType=INTEGER},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseCommentExample" resultType="java.lang.Integer" >
        select count(*) from course_comment
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update course_comment
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.createdAt != null" >
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null" >
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.star != null" >
                star = #{record.star,jdbcType=INTEGER},
            </if>
            <if test="record.topping != null" >
                topping = #{record.topping,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.likeNumber != null" >
                like_number = #{record.likeNumber,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null" >
                pid = #{record.pid,jdbcType=BIGINT},
            </if>
            <if test="record.parentNo != null" >
                parent_no = #{record.parentNo,jdbcType=BIGINT},
            </if>
            <if test="record.courseId != null" >
                course_id = #{record.courseId,jdbcType=BIGINT},
            </if>
            <if test="record.chapterId != null" >
                chapter_id = #{record.chapterId,jdbcType=BIGINT},
            </if>
            <if test="record.periodId != null" >
                period_id = #{record.periodId,jdbcType=BIGINT},
            </if>
            <if test="record.commentType != null" >
                comment_type = #{record.commentType,jdbcType=INTEGER},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update course_comment
        set
            id = #{record.id,jdbcType=BIGINT},
            created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            star = #{record.star,jdbcType=INTEGER},
            topping = #{record.topping,jdbcType=INTEGER},
            user_id = #{record.userId,jdbcType=BIGINT},
            content = #{record.content,jdbcType=VARCHAR},
            like_number = #{record.likeNumber,jdbcType=INTEGER},
            pid = #{record.pid,jdbcType=BIGINT},
            parent_no = #{record.parentNo,jdbcType=BIGINT},
            course_id = #{record.courseId,jdbcType=BIGINT},
            chapter_id = #{record.chapterId,jdbcType=BIGINT},
            period_id = #{record.periodId,jdbcType=BIGINT},
            comment_type = #{record.commentType,jdbcType=INTEGER},
            status = #{record.status,jdbcType=INTEGER},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseComment" >
        update course_comment
        <set >
                <if test="createdAt != null" >
                    created_at = #{createdAt,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedAt != null" >
                    updated_at = #{updatedAt,jdbcType=TIMESTAMP},
                </if>
                <if test="star != null" >
                    star = #{star,jdbcType=INTEGER},
                </if>
                <if test="topping != null" >
                    topping = #{topping,jdbcType=INTEGER},
                </if>
                <if test="userId != null" >
                    user_id = #{userId,jdbcType=BIGINT},
                </if>
                <if test="content != null" >
                    content = #{content,jdbcType=VARCHAR},
                </if>
                <if test="likeNumber != null" >
                    like_number = #{likeNumber,jdbcType=INTEGER},
                </if>
                <if test="pid != null" >
                    pid = #{pid,jdbcType=BIGINT},
                </if>
                <if test="parentNo != null" >
                    parent_no = #{parentNo,jdbcType=BIGINT},
                </if>
                <if test="courseId != null" >
                    course_id = #{courseId,jdbcType=BIGINT},
                </if>
                <if test="chapterId != null" >
                    chapter_id = #{chapterId,jdbcType=BIGINT},
                </if>
                <if test="periodId != null" >
                    period_id = #{periodId,jdbcType=BIGINT},
                </if>
                <if test="commentType != null" >
                    comment_type = #{commentType,jdbcType=INTEGER},
                </if>
                <if test="status != null" >
                    status = #{status,jdbcType=INTEGER},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseComment" >
        update course_comment
        set
                created_at = #{createdAt,jdbcType=TIMESTAMP},
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
                star = #{star,jdbcType=INTEGER},
                topping = #{topping,jdbcType=INTEGER},
                user_id = #{userId,jdbcType=BIGINT},
                content = #{content,jdbcType=VARCHAR},
                like_number = #{likeNumber,jdbcType=INTEGER},
                pid = #{pid,jdbcType=BIGINT},
                parent_no = #{parentNo,jdbcType=BIGINT},
                course_id = #{courseId,jdbcType=BIGINT},
                chapter_id = #{chapterId,jdbcType=BIGINT},
                period_id = #{periodId,jdbcType=BIGINT},
                comment_type = #{commentType,jdbcType=INTEGER},
                status = #{status,jdbcType=INTEGER},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>