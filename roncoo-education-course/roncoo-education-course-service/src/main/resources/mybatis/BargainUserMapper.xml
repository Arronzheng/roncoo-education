<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.service.dao.impl.mapper.BargainUserMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUser">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="uid" property="uid" jdbcType="BIGINT"/>
            <result column="bargain_id" property="bargainId" jdbcType="BIGINT"/>
            <result column="bargain_price_min" property="bargainPriceMin" jdbcType="DECIMAL"/>
            <result column="bargain_price" property="bargainPrice" jdbcType="DECIMAL"/>
            <result column="price" property="price" jdbcType="DECIMAL"/>
            <result column="status" property="status" jdbcType="TINYINT"/>
            <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
            <result column="address_id" property="addressId" jdbcType="BIGINT"/>
            <result column="is_del" property="isDel" jdbcType="TINYINT"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, uid, bargain_id, bargain_price_min, bargain_price, price, status, add_time, address_id, is_del
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUserExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from bargain_user
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from bargain_user
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from bargain_user
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUserExample" >
        delete from bargain_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUser" >
        insert into bargain_user
        (
         id, uid, bargain_id, bargain_price_min, bargain_price, price, status, add_time, address_id, is_del
        ) values (
            #{id,jdbcType=BIGINT},
            #{uid,jdbcType=BIGINT},
            #{bargainId,jdbcType=BIGINT},
            #{bargainPriceMin,jdbcType=DECIMAL},
            #{bargainPrice,jdbcType=DECIMAL},
            #{price,jdbcType=DECIMAL},
            #{status,jdbcType=TINYINT},
            #{addTime,jdbcType=TIMESTAMP},
            #{addressId,jdbcType=BIGINT},
            #{isDel,jdbcType=TINYINT},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUser" >
        insert into bargain_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="uid != null" >
                uid,
            </if>
            <if test="bargainId != null" >
                bargain_id,
            </if>
            <if test="bargainPriceMin != null" >
                bargain_price_min,
            </if>
            <if test="bargainPrice != null" >
                bargain_price,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="addTime != null" >
                add_time,
            </if>
            <if test="addressId != null" >
                address_id,
            </if>
            <if test="isDel != null" >
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="uid != null" >
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="bargainId != null" >
                #{bargainId,jdbcType=BIGINT},
            </if>
            <if test="bargainPriceMin != null" >
                #{bargainPriceMin,jdbcType=DECIMAL},
            </if>
            <if test="bargainPrice != null" >
                #{bargainPrice,jdbcType=DECIMAL},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="addTime != null" >
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="addressId != null" >
                #{addressId,jdbcType=BIGINT},
            </if>
            <if test="isDel != null" >
                #{isDel,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUserExample" resultType="java.lang.Integer" >
        select count(*) from bargain_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update bargain_user
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.uid != null" >
                uid = #{record.uid,jdbcType=BIGINT},
            </if>
            <if test="record.bargainId != null" >
                bargain_id = #{record.bargainId,jdbcType=BIGINT},
            </if>
            <if test="record.bargainPriceMin != null" >
                bargain_price_min = #{record.bargainPriceMin,jdbcType=DECIMAL},
            </if>
            <if test="record.bargainPrice != null" >
                bargain_price = #{record.bargainPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.addTime != null" >
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.addressId != null" >
                address_id = #{record.addressId,jdbcType=BIGINT},
            </if>
            <if test="record.isDel != null" >
                is_del = #{record.isDel,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update bargain_user
        set
            id = #{record.id,jdbcType=BIGINT},
            uid = #{record.uid,jdbcType=BIGINT},
            bargain_id = #{record.bargainId,jdbcType=BIGINT},
            bargain_price_min = #{record.bargainPriceMin,jdbcType=DECIMAL},
            bargain_price = #{record.bargainPrice,jdbcType=DECIMAL},
            price = #{record.price,jdbcType=DECIMAL},
            status = #{record.status,jdbcType=TINYINT},
            add_time = #{record.addTime,jdbcType=TIMESTAMP},
            address_id = #{record.addressId,jdbcType=BIGINT},
            is_del = #{record.isDel,jdbcType=TINYINT},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUser" >
        update bargain_user
        <set >
                <if test="uid != null" >
                    uid = #{uid,jdbcType=BIGINT},
                </if>
                <if test="bargainId != null" >
                    bargain_id = #{bargainId,jdbcType=BIGINT},
                </if>
                <if test="bargainPriceMin != null" >
                    bargain_price_min = #{bargainPriceMin,jdbcType=DECIMAL},
                </if>
                <if test="bargainPrice != null" >
                    bargain_price = #{bargainPrice,jdbcType=DECIMAL},
                </if>
                <if test="price != null" >
                    price = #{price,jdbcType=DECIMAL},
                </if>
                <if test="status != null" >
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="addTime != null" >
                    add_time = #{addTime,jdbcType=TIMESTAMP},
                </if>
                <if test="addressId != null" >
                    address_id = #{addressId,jdbcType=BIGINT},
                </if>
                <if test="isDel != null" >
                    is_del = #{isDel,jdbcType=TINYINT},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.BargainUser" >
        update bargain_user
        set
                uid = #{uid,jdbcType=BIGINT},
                bargain_id = #{bargainId,jdbcType=BIGINT},
                bargain_price_min = #{bargainPriceMin,jdbcType=DECIMAL},
                bargain_price = #{bargainPrice,jdbcType=DECIMAL},
                price = #{price,jdbcType=DECIMAL},
                status = #{status,jdbcType=TINYINT},
                add_time = #{addTime,jdbcType=TIMESTAMP},
                address_id = #{addressId,jdbcType=BIGINT},
                is_del = #{isDel,jdbcType=TINYINT},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
