<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.service.dao.impl.mapper.CourseUserCollectionMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollection">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="user_no" property="userNo" jdbcType="BIGINT"/>
            <result column="course_id" property="courseId" jdbcType="BIGINT"/>
            <result column="courseName" property="courseName" jdbcType="VARCHAR"/>
            <result column="courseLogo" property="courseLogo" jdbcType="VARCHAR"/>
            <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_no, course_id, courseName, courseLogo, gmt_create
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollectionExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from course_user_collection
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from course_user_collection
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from course_user_collection
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollectionExample" >
        delete from course_user_collection
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollection" >
        insert into course_user_collection
        (
         id, user_no, course_id, courseName, courseLogo, gmt_create
        ) values (
            #{id,jdbcType=BIGINT},
            #{userNo,jdbcType=BIGINT},
            #{courseId,jdbcType=BIGINT},
            #{courseName,jdbcType=VARCHAR},
            #{courseLogo,jdbcType=VARCHAR},
            #{gmtCreate,jdbcType=TIMESTAMP},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollection" >
        insert into course_user_collection
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="userNo != null" >
                user_no,
            </if>
            <if test="courseId != null" >
                course_id,
            </if>
            <if test="courseName != null" >
                courseName,
            </if>
            <if test="courseLogo != null" >
                courseLogo,
            </if>
            <if test="gmtCreate != null" >
                gmt_create,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userNo != null" >
                #{userNo,jdbcType=BIGINT},
            </if>
            <if test="courseId != null" >
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="courseName != null" >
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="courseLogo != null" >
                #{courseLogo,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null" >
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollectionExample" resultType="java.lang.Integer" >
        select count(*) from course_user_collection
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update course_user_collection
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userNo != null" >
                user_no = #{record.userNo,jdbcType=BIGINT},
            </if>
            <if test="record.courseId != null" >
                course_id = #{record.courseId,jdbcType=BIGINT},
            </if>
            <if test="record.courseName != null" >
                courseName = #{record.courseName,jdbcType=VARCHAR},
            </if>
            <if test="record.courseLogo != null" >
                courseLogo = #{record.courseLogo,jdbcType=VARCHAR},
            </if>
            <if test="record.gmtCreate != null" >
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update course_user_collection
        set
            id = #{record.id,jdbcType=BIGINT},
            user_no = #{record.userNo,jdbcType=BIGINT},
            course_id = #{record.courseId,jdbcType=BIGINT},
            courseName = #{record.courseName,jdbcType=VARCHAR},
            courseLogo = #{record.courseLogo,jdbcType=VARCHAR},
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollection" >
        update course_user_collection
        <set >
                <if test="userNo != null" >
                    user_no = #{userNo,jdbcType=BIGINT},
                </if>
                <if test="courseId != null" >
                    course_id = #{courseId,jdbcType=BIGINT},
                </if>
                <if test="courseName != null" >
                    courseName = #{courseName,jdbcType=VARCHAR},
                </if>
                <if test="courseLogo != null" >
                    courseLogo = #{courseLogo,jdbcType=VARCHAR},
                </if>
                <if test="gmtCreate != null" >
                    gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CourseUserCollection" >
        update course_user_collection
        set
                user_no = #{userNo,jdbcType=BIGINT},
                course_id = #{courseId,jdbcType=BIGINT},
                courseName = #{courseName,jdbcType=VARCHAR},
                courseLogo = #{courseLogo,jdbcType=VARCHAR},
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>