<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.service.dao.impl.mapper.CouponUserMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUser">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="cid" property="cid" jdbcType="BIGINT"/>
            <result column="uid" property="uid" jdbcType="BIGINT"/>
            <result column="coupon_title" property="couponTitle" jdbcType="VARCHAR"/>
            <result column="coupon_price" property="couponPrice" jdbcType="DECIMAL"/>
            <result column="use_min_price" property="useMinPrice" jdbcType="DECIMAL"/>
            <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
            <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
            <result column="use_time" property="useTime" jdbcType="TIMESTAMP"/>
            <result column="type" property="type" jdbcType="VARCHAR"/>
            <result column="status" property="status" jdbcType="TINYINT"/>
            <result column="is_fail" property="isFail" jdbcType="TINYINT"/>
        </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
        <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, cid, uid, coupon_title, coupon_price, use_min_price, add_time, end_time, use_time, type, status, is_fail
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUserExample">
        select
            <if test="distinct" >
                distinct
            </if>
            <include refid="Base_Column_List" />
        from coupon_user
            <if test="_parameter != null" >
                <include refid="Example_Where_Clause" />
            </if>
            <if test="orderByClause != null" >
                order by ${orderByClause}
            </if>
            <if test="limitStart >= 0" >
                limit ${limitStart} , ${pageSize}
            </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
            <include refid="Base_Column_List" />
        from coupon_user
        where
        id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from coupon_user
        where
        id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUserExample" >
        delete from coupon_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUser" >
        insert into coupon_user
        (
         id, cid, uid, coupon_title, coupon_price, use_min_price, add_time, end_time, use_time, type, status, is_fail
        ) values (
            #{id,jdbcType=BIGINT},
            #{cid,jdbcType=BIGINT},
            #{uid,jdbcType=BIGINT},
            #{couponTitle,jdbcType=VARCHAR},
            #{couponPrice,jdbcType=DECIMAL},
            #{useMinPrice,jdbcType=DECIMAL},
            #{addTime,jdbcType=TIMESTAMP},
            #{endTime,jdbcType=TIMESTAMP},
            #{useTime,jdbcType=TIMESTAMP},
            #{type,jdbcType=VARCHAR},
            #{status,jdbcType=TINYINT},
            #{isFail,jdbcType=TINYINT},
        )
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUser" >
        insert into coupon_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="cid != null" >
                cid,
            </if>
            <if test="uid != null" >
                uid,
            </if>
            <if test="couponTitle != null" >
                coupon_title,
            </if>
            <if test="couponPrice != null" >
                coupon_price,
            </if>
            <if test="useMinPrice != null" >
                use_min_price,
            </if>
            <if test="addTime != null" >
                add_time,
            </if>
            <if test="endTime != null" >
                end_time,
            </if>
            <if test="useTime != null" >
                use_time,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="isFail != null" >
                is_fail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="cid != null" >
                #{cid,jdbcType=BIGINT},
            </if>
            <if test="uid != null" >
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="couponTitle != null" >
                #{couponTitle,jdbcType=VARCHAR},
            </if>
            <if test="couponPrice != null" >
                #{couponPrice,jdbcType=DECIMAL},
            </if>
            <if test="useMinPrice != null" >
                #{useMinPrice,jdbcType=DECIMAL},
            </if>
            <if test="addTime != null" >
                #{addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null" >
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="useTime != null" >
                #{useTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="isFail != null" >
                #{isFail,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUserExample" resultType="java.lang.Integer" >
        select count(*) from coupon_user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update coupon_user
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.cid != null" >
                cid = #{record.cid,jdbcType=BIGINT},
            </if>
            <if test="record.uid != null" >
                uid = #{record.uid,jdbcType=BIGINT},
            </if>
            <if test="record.couponTitle != null" >
                coupon_title = #{record.couponTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.couponPrice != null" >
                coupon_price = #{record.couponPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.useMinPrice != null" >
                use_min_price = #{record.useMinPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.addTime != null" >
                add_time = #{record.addTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null" >
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.useTime != null" >
                use_time = #{record.useTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.isFail != null" >
                is_fail = #{record.isFail,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update coupon_user
        set
            id = #{record.id,jdbcType=BIGINT},
            cid = #{record.cid,jdbcType=BIGINT},
            uid = #{record.uid,jdbcType=BIGINT},
            coupon_title = #{record.couponTitle,jdbcType=VARCHAR},
            coupon_price = #{record.couponPrice,jdbcType=DECIMAL},
            use_min_price = #{record.useMinPrice,jdbcType=DECIMAL},
            add_time = #{record.addTime,jdbcType=TIMESTAMP},
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
            use_time = #{record.useTime,jdbcType=TIMESTAMP},
            type = #{record.type,jdbcType=VARCHAR},
            status = #{record.status,jdbcType=TINYINT},
            is_fail = #{record.isFail,jdbcType=TINYINT},
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUser" >
        update coupon_user
        <set >
                <if test="cid != null" >
                    cid = #{cid,jdbcType=BIGINT},
                </if>
                <if test="uid != null" >
                    uid = #{uid,jdbcType=BIGINT},
                </if>
                <if test="couponTitle != null" >
                    coupon_title = #{couponTitle,jdbcType=VARCHAR},
                </if>
                <if test="couponPrice != null" >
                    coupon_price = #{couponPrice,jdbcType=DECIMAL},
                </if>
                <if test="useMinPrice != null" >
                    use_min_price = #{useMinPrice,jdbcType=DECIMAL},
                </if>
                <if test="addTime != null" >
                    add_time = #{addTime,jdbcType=TIMESTAMP},
                </if>
                <if test="endTime != null" >
                    end_time = #{endTime,jdbcType=TIMESTAMP},
                </if>
                <if test="useTime != null" >
                    use_time = #{useTime,jdbcType=TIMESTAMP},
                </if>
                <if test="type != null" >
                    type = #{type,jdbcType=VARCHAR},
                </if>
                <if test="status != null" >
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="isFail != null" >
                    is_fail = #{isFail,jdbcType=TINYINT},
                </if>
        </set>
        where
                id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.service.dao.impl.mapper.entity.CouponUser" >
        update coupon_user
        set
                cid = #{cid,jdbcType=BIGINT},
                uid = #{uid,jdbcType=BIGINT},
                coupon_title = #{couponTitle,jdbcType=VARCHAR},
                coupon_price = #{couponPrice,jdbcType=DECIMAL},
                use_min_price = #{useMinPrice,jdbcType=DECIMAL},
                add_time = #{addTime,jdbcType=TIMESTAMP},
                end_time = #{endTime,jdbcType=TIMESTAMP},
                use_time = #{useTime,jdbcType=TIMESTAMP},
                type = #{type,jdbcType=VARCHAR},
                status = #{status,jdbcType=TINYINT},
                is_fail = #{isFail,jdbcType=TINYINT},
        where
        id = #{id,jdbcType=BIGINT}
  </update>
</mapper>